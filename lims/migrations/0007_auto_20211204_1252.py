# Generated by Django 3.1.2 on 2021-12-04 19:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('lims', '0006_auto_20211117_1623'),
    ]

    operations = [
        migrations.CreateModel(
            name='PoolBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box_name', models.CharField(max_length=100, unique=True)),
                ('size', models.PositiveIntegerField(default=81)),
                ('storage_location', models.CharField(blank=True, max_length=100, null=True)),
                ('storage_shelf', models.CharField(blank=True, max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'pool_boxes',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='PoolBoxPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='PoolResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('replicate', models.PositiveIntegerField(default=1)),
                ('result', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Pending', 'Pending'), ('Unknown', 'Unknown'), ('Inconclusive', 'Inconclusive')], default='Pending', max_length=15)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box_name', models.CharField(max_length=100, unique=True)),
                ('size', models.PositiveIntegerField(default=81)),
                ('storage_location', models.CharField(blank=True, max_length=100, null=True)),
                ('storage_shelf', models.CharField(blank=True, max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'sample_boxes',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='SampleBoxPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.RenameModel(
            old_name='TestResult',
            new_name='SampleResult',
        ),
        migrations.AlterModelOptions(
            name='pool',
            options={'ordering': ('-created_on',)},
        ),
        migrations.RenameField(
            model_name='subject',
            old_name='dose_3',
            new_name='booster_date',
        ),
        migrations.RenameField(
            model_name='subject',
            old_name='dose_1',
            new_name='dose_1_date',
        ),
        migrations.RenameField(
            model_name='subject',
            old_name='dose_2',
            new_name='dose_2_date',
        ),
        migrations.RemoveField(
            model_name='pool',
            name='box',
        ),
        migrations.RemoveField(
            model_name='pool',
            name='box_position',
        ),
        migrations.RemoveField(
            model_name='pool',
            name='status',
        ),
        migrations.RemoveField(
            model_name='sample',
            name='box',
        ),
        migrations.RemoveField(
            model_name='sample',
            name='box_position',
        ),
        migrations.RemoveField(
            model_name='subject',
            name='prior_covid',
        ),
        migrations.RemoveField(
            model_name='subject',
            name='vaccine_status',
        ),
        migrations.AddField(
            model_name='subject',
            name='booster',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='location',
            field=models.ManyToManyField(blank=True, to='lims.Location'),
        ),
        migrations.AddField(
            model_name='subject',
            name='dose_1',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subject',
            name='dose_2',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='subject',
            name='ethnicity'
        ),
        migrations.AddField(
            model_name='subject',
            name='ethnicity',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='subject',
            name='pneumococcal_vaccine',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='subject',
            name='race',
        ),
        migrations.AlterField(
            model_name='test',
            name='detects',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddConstraint(
            model_name='sampleresult',
            constraint=models.UniqueConstraint(fields=('sample', 'test', 'replicate'), name='unique_sample_result'),
        ),
        migrations.DeleteModel(
            name='Box',
        ),
        migrations.AddField(
            model_name='sampleboxposition',
            name='sample',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lims.sample'),
        ),
        migrations.AddField(
            model_name='samplebox',
            name='positions',
            field=models.ManyToManyField(related_name='sample_box', to='lims.SampleBoxPosition'),
        ),
        migrations.AddField(
            model_name='poolresult',
            name='pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.pool'),
        ),
        migrations.AddField(
            model_name='poolresult',
            name='researcher',
            field=models.ManyToManyField(blank=True, to='lims.Researcher'),
        ),
        migrations.AddField(
            model_name='poolresult',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lims.test'),
        ),
        migrations.AddField(
            model_name='poolboxposition',
            name='pool',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lims.pool'),
        ),
        migrations.AddField(
            model_name='poolbox',
            name='positions',
            field=models.ManyToManyField(related_name='pool_box', to='lims.PoolBoxPosition'),
        ),
        migrations.AddField(
            model_name='subject',
            name='race',
            field=models.ManyToManyField(blank=True, to='lims.Race'),
        ),
        migrations.AddConstraint(
            model_name='poolresult',
            constraint=models.UniqueConstraint(fields=('pool', 'test', 'replicate'), name='unique_pool_result'),
        ),
    ]
